<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Yomu">
    <Style TargetType="{x:Type Button}" x:Key="ChromeButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="#e6e6e6" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#44e6e6e6" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#88e6e6e6" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ChromeButtonClose" BasedOn="{StaticResource ChromeButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="ToolWindow">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="SingleBorderWindow">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ChromeButtonMaximize" BasedOn="{StaticResource ChromeButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="ToolWindow">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="SingleBorderWindow">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ChromeButtonMinimize" BasedOn="{StaticResource ChromeButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="ToolWindow">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource AncestorType=Window}}" Value="SingleBorderWindow">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="YomuWindow" TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="4" CaptionHeight="30" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="WindowBorder" Padding="2" BorderBrush="#222" BorderThickness="1" Background="{StaticResource YomuWindowBackgroundImageBrush}">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" />
                        </Border.Effect>
                        <DockPanel>
                            <Border DockPanel.Dock="Top" Height="30" Name="WindowHeader" Background="Transparent">
                                <DockPanel LastChildFill="False" WindowChrome.IsHitTestVisibleInChrome="True">
                                    <!--<Image Source="icons/yomi.ico" Height="30" Margin="4,0" WindowChrome.IsHitTestVisibleInChrome="False" />-->
                                    <ContentControl Content="{Binding Source={StaticResource YomuIcon}}" Margin="4,4" WindowChrome.IsHitTestVisibleInChrome="False" />
                                    <TextBlock DockPanel.Dock="Left" Text="{TemplateBinding Title}" Foreground="{StaticResource YomuDimForegroundBrush}" Margin="8,4" VerticalAlignment="Center" WindowChrome.IsHitTestVisibleInChrome="False" />
                                    <Button DockPanel.Dock="Right" Command="local:Commands.Quit" Margin="0,-2,-2,0" Style="{StaticResource ChromeButtonClose}">
                                        <!--<Path Fill="{StaticResource YomuForegroundBrush}" Data="M1,1 L3,1 L6,5 L9,1 L11,1 L7,6 L11,11 L9,11 L6,7 L3,11 L1,11 L5,6 L1,1z" />-->
                                        <Path Stroke="{StaticResource YomuForegroundBrush}" Data="M1,1 L11,11 M11,1 L1,11" />
                                    </Button>
                                    <Button DockPanel.Dock="Right" Command="local:Commands.Maximize" Margin="0,-2,0,0" Style="{StaticResource ChromeButtonMaximize}">
                                        <Path Fill="{StaticResource YomuForegroundBrush}">
                                            <Path.Data>
                                                <CombinedGeometry GeometryCombineMode="Xor">
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="0,0,10,10" />
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="1,1,8,8" />
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </Path.Data>
                                        </Path>
                                    </Button>
                                    <Button DockPanel.Dock="Right" Command="local:Commands.Minimize" Margin="0,-2,0,0" Style="{StaticResource ChromeButtonMinimize}">
                                        <Path Fill="{StaticResource YomuForegroundBrush}">
                                            <Path.Data>
                                                <RectangleGeometry Rect="0,9,10,1" />
                                            </Path.Data>
                                        </Path>
                                    </Button>
                                </DockPanel>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#e6e6e6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Margin="6,3,6,3" Source="{TemplateBinding Icon}" />
                                <ContentPresenter Grid.Column="1" Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" TextBlock.Foreground="{TemplateBinding Foreground}" />
                                <ContentPresenter Grid.Column="2" Margin="6,3,6,3" ContentSource="InputGestureText" RecognizesAccessKey="True" TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                            <Popup Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="None">
                                <Border SnapsToDevicePixels="True" BorderThickness="1" Background="#222" BorderBrush="#333">
                                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#22e6e6e6" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#44e6e6e6" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#88e6e6e6" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#44e6e6e6" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#88e6e6e6" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="#88e6e6e6" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>